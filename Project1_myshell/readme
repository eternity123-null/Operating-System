          *********************************
          * myshell----一个简单的shell程序 *  
          *********************************
Author: zengchendong
Date：2022/03/04

运行所需文件：makefile myshell.c
如何运行：
$ make myshell
$ ./myshell

一、程序支持的内部指令：
    1. cd <directory>
        从当前的默认目录跳转到指定的目录directory . 注意,该目录必须为当前目录的子目录或上一级目录（..）。
        如果没有指定参数directory ，输出当前目录。
        如果directory 目录不存在，输出错误信息。
        同时修改环境变量PWD 。
    2. clr ：清空屏幕上的显示内容。
    3. dir <directory> ：输出目录directory 下的所有内容，包括目录和文件。
    4. environ ：输出所有的环境变量。
    5. echo <comment>
        输出comment 的具体内容并换行。
    6. help ：用户指南。
    7. pause ：停止Shell的执行，直到你按下Enter 键。
    8. quit ：退出。

二、环境变量 environment
    环境变量（environment variables）一般是指在操作系统中用来指定操作系统运行环境的一些参数，如：临时文件夹位置和系统文件夹位置等。
    PATH：告诉系统，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到哪些目录下去寻找。
    PWD：Shell当前的工作目录。当使用cd命令时，PWD也会随之改变到目标文件夹。
    本程序会自动将SHELL路径加入到环境变量中。

三、批处理 batch
    myshell支持批处理。可以从参数指定的文件中读取指令，并依次执行。例如：
    $ myshell batchfile
    那么，myshell会依次读取batchfile文件的每一行并执行。当读取到文件的最后一行时，Shell会退出。

四、输入/输出重定向 I/O redirection
    输入重定向是指把文件中的内容作为命令的输入，而输出重定向则是指把原本要输出到屏幕的数据信息写入到指定文件中。
    例如我们输入：
    $ programname arg1 arg2 < inputfile > outputfile
    或者：
    $programname arg1 arg2 < inputfile >> outputfile
    其中， programname 是可执行指令， arg* 是指令的参数。该指令从inputfile 中获取用户输入，而不是标准输入stdin ；指令执行的结果会输出到outputfile ，而不是标准输出stdout 。
    又或者：$ help > outputfile 的执行结果应该输出到用户指定的文件outputfile.
    当使用输出重定向时：
      a.如果表示重定向的字符串是  > 
        ----如果outputfile 不存在，则新建文件。
        ----如果outputfile 存在，那么输出会覆盖原文件。
      b.如果表示重定向的字符串是  >> 
        ----如果outputfile 不存在，则新建文件。
        ----如果outputfile 存在，那么输出添加到原文件后面。

五、后台执行
    myshell可以支持后台任务的执行。当一条指令后面有& 符号时，Shell不需要等待该指令执行结束才能返回。
    例如：$ programname arg & 
    此时该命令将在后台执行，shell会直接返回，该命令也会自动结束。

